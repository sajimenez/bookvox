apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: bookvox
  labels:
    app: bookvox
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: bookvox
    spec:
      containers:

      - name: bookvox-app
        image: gcr.io/bookvox/bookvox_app:1.0.0
        command: ["sh", '-c']
        args: ["gunicorn --workers=1 --threads=1 bookvox.wsgi:application --bind 0.0.0.0:8000"]

        ports:
          - containerPort: 8000

        imagePullPolicy: Always

        env:
          - name: DEBUG
            valueFrom:
              secretKeyRef:
                name: bookvox-settings
                key: DEBUG

          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: bookvox-settings
                key: SECRET_KEY

          # Database
          - name: SQL_ENGINE
            valueFrom:
              secretKeyRef:
                name: bookvox-settings
                key: SQL_ENGINE


          - name: SQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: bookvox-settings
                key: SQL_DATABASE

          - name: SQL_USER
            valueFrom:
              secretKeyRef:
                name: bookvox-settings
                key: SQL_USER

          - name: SQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: bookvox-settings
                key: SQL_PASSWORD

          - name: SQL_HOST
            valueFrom:
              secretKeyRef:
                name: bookvox-settings
                key: SQL_HOST

        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql-oauth-credentials
            readOnly: true

      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.16
        
        command: ["/cloud_sql_proxy",
                  "-instances=bookvox:southamerica-east1:bookvox-bd=tcp:5432",
                  "-credential_file=/secrets/cloudsql-oauth-credentials/credentials.json"]
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql-oauth-credentials
            readOnly: true

      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
